image: node:8-alpine

cache:
  paths:
    - node_modules/
    - dist/

stages:
  - generate
  - build
  - test_static
  - deploy
  - commit

generate:
  stage: generate
  script:
    - ./scripts/generate.sh
  only:
    - triggers
  cache:
    paths:
      - "."

build:
  stage: build
  before_script:
    - npm install
  script:
    - if [ "${CI_COMMIT_TAG}" == "" ]; then
        npm run snapshot
      fi
    - npm run build
  artifacts:
    name: "$CI_PROJECT_NAME-${CI_COMMIT_REF_NAME}"
    paths:
      - dist/
    expire_in: 20 yrs

lint:
  stage: test_static
  script:
    - npm run lint
  allow_failure: true
  except:
    - schedules

audit:
  stage: test_static
  script:
    - npm audit
  allow_failure: true
  except:
    - schedules

npm-check:
  stage: test_static
  script:
    - ng run check
  allow_failure: true
  except:
    - schedules

# test:codecov:
#   stage: test
#   script:
#     - npm install -g codecov
#     # - npm test && codecov

# test:node:6:
#   image: node:6
#   stage: test
#   script:
#     - npm test

# test:node:7:
#   image: node:7
#   stage: test
#   script:
#     - npm test

# test:node:4:
#   image: node:4
#   stage: test
#   script:
#     - npm test

publish:
  stage: deploy
  before_script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    #- echo '//gitlab.com/api/v4/projects/12304429/packages/npm/:_authToken=${REGISTRY_GITLAB_PASS}' > .npmrc
  script:
    - if [ "${CI_COMMIT_TAG}" == "" ]; then
        export PUBLISH_TYPE="-snapshot"
      fi
    - npm run "publish${PUBLISH_TYPE}"
