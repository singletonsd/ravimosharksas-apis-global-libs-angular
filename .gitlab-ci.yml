image: node:8-alpine

variables:
  ORIGINAL_REPOSITORY: ravimosharksas/apis/global/libs/angular

stages:
  - generate
  - build
  - test_static
  - deploy
  - commit

generate:
  image: maven:3.6.1-jdk-13-alpine
  stage: generate
  before_script:
    - apk add --no-cache bash curl
  script:
    - ./scripts/generate.sh
  artifacts:
    paths:
      - ./*.json
      - src/**/*
  only:
    - triggers

build:
  stage: build
  before_script:
    - npm install
    - npm i -g npm-snapshot
#    - apk add --no-cache bash grep gawk sed bc coreutils
  script:
    # Set version to next one if it was trigger by documentation.
    - if [ "${CI_PIPELINE_TRIGGERED}" == "true" ]; then
        npm version minor --git=false || true;
      fi
    - if [ "${CI_COMMIT_TAG}" == "" ]; then
        npm run snapshot;
      fi
    - npm run build
  artifacts:
    name: "$CI_PROJECT_NAME-${CI_COMMIT_REF_NAME}"
    paths:
      - dist/
    expire_in: 20 yrs
    name: dependencies
    paths:
      - node_modules/
  only:
    changes:
      - package.json
      - src/**/*

lint:
  stage: test_static
  script:
    - npm run lint
  allow_failure: true
  except:
    - schedules
  only:
    changes:
      - package.json
      - src/**/*

audit:
  stage: test_static
  script:
    - npm audit
  allow_failure: true
  except:
    - schedules
  only:
    changes:
      - package.json
      - src/**/*

npm-check:
  stage: test_static
  script:
    - npm run check
  allow_failure: true
  except:
    - schedules
  only:
    changes:
      - package.json
      - src/**/*

# test:codecov:
#   stage: test
#   script:
#     - npm install -g codecov
#     # - npm test && codecov

# test:node:6:
#   image: node:6
#   stage: test
#   script:
#     - npm test

# test:node:7:
#   image: node:7
#   stage: test
#   script:
#     - npm test

# test:node:4:
#   image: node:4
#   stage: test
#   script:
#     - npm test

publish:
  stage: deploy
  before_script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    #- echo '//gitlab.com/api/v4/projects/12304429/packages/npm/:_authToken=${REGISTRY_GITLAB_PASS}' > .npmrc
  script:
    - if [ "${CI_COMMIT_TAG}" == "" ]; then
        export PUBLISH_TYPE="-snapshot";
      fi
    - npm run "publish${PUBLISH_TYPE}"
  only:
    variables:
      - $CI_PROJECT_PATH == $ORIGINAL_REPOSITORY
    changes:
      - package.json
      - src/**/*

commit:
  stage: commit
  before_script:
    - apk add --no-cache bash curl git
    - 'which ssh-agent || ( apk add --update openssh )'
    - mkdir -p ~/.ssh
    - echo "$GITLAB_PROJECT_SSH_PRIVATE" | tr -d '\r' > ~/.ssh/gitlab_project
    - chmod 700 ~/.ssh/gitlab_project
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/gitlab_project
    - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
  script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git remote set-url --push origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
    - git add .
    - git commit -m "New auto generated library from documentation. [skip ci]"
    - git status
    - git push origin HEAD:master
  only:
    variables:
      - $CI_PROJECT_PATH == "${ORIGINAL_REPOSITORY}"
      - $CI_PIPELINE_TRIGGERED == "true"
    changes:
      - package.json
      - src/**/*
