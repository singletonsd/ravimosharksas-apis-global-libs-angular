/**
 * Ravimo Global API
 * Ravimo Mobile and Web Global API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: joseph.assouline@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Carts } from '../models/carts';
import { CustomError } from '../models/customError';
import { Orders } from '../models/orders';


import { Configuration }                                     from '../configuration';


export interface OrderServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * check payment Token.
    * check payment Token
    * @param Token user token
    * @param LANG user LANG
    */
    checkPayment(Token: string, LANG: string, extraHttpRequestParams?: any): Observable<Array<number>>;

    /**
    * resume panier.
    *  resume panier
    * @param Token user token
    * @param LANG user LANG
    */
    finalizeOrder(Token: string, LANG: string, extraHttpRequestParams?: any): Observable<Carts>;

    /**
    * Get all client&#39;s orders
    * Register client&#39;s addresses.
    * @param Token user token
    * @param LANG user LANG
    * @param OrderId order&#39;s id
    * @param Start Start Date. Format: YYYY-MM-DD
    * @param End End date. Format: YYYY-MM-DD
    */
    getListOrders(Token: string, LANG: string, OrderId?: number, Start?: string, End?: string, extraHttpRequestParams?: any): Observable<Array<Orders>>;

    /**
    * 
    *  Genere Pdf Invoice
    * @param Token user token
    * @param LANG user LANG
    * @param idOrder  id order
    */
    orderidorderbillPost(Token: string, LANG: string, idOrder: number, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * 
    *  contenue ancienne commande
    * @param Token user token
    * @param LANG user LANG
    * @param idOrder  id order
    */
    orderidorderfillPost(Token: string, LANG: string, idOrder: number, extraHttpRequestParams?: any): Observable<Array<number>>;

    /**
    * lance procedur payement.
    * lance procedur payement
    * @param Token user token
    * @param LANG user LANG
    */
    payOrder(Token: string, LANG: string, extraHttpRequestParams?: any): Observable<Carts>;

    /**
    * Post an order.
    * 
    * @param Token user token
    * @param LANG user LANG
    * @param Order Order object
    */
    setOrder(Token: string, LANG: string, Order: Orders, extraHttpRequestParams?: any): Observable<Orders>;

}
