/**
 * Ravimo Global API
 * Ravimo Mobile and Web Global API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: joseph.assouline@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CustomError } from '../models/customError';
import { Taches } from '../models/taches';


import { Configuration }                                     from '../configuration';


export interface TachesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Get all taches filtered by values provided.
    * Get all taches filtered by values provided.
    * @param Token user token
    * @param LANG user LANG
    * @param TechnicienId Technicien&#39;s id.
    * @param TaskId Task&#39;s id.
    * @param ClientsAddressId ClientsAddress&#39; id.
    * @param RefClient 
    * @param DateAppel Call&#39;s Day. Format: YYYY-MM-DD
    * @param Date_Depan Fix&#39;s Day. Format: YYYY-MM-DD
    * @param Fixed If the tasks were fixed or not
    * @param MachineId Machine&#39;s id.
    */
    getListTaches(Token: string, LANG: string, TechnicienId?: number, TaskId?: number, ClientsAddressId?: number, RefClient?: string, DateAppel?: string, Date_Depan?: string, Fixed?: boolean, MachineId?: number, extraHttpRequestParams?: any): Observable<Array<Taches>>;

    /**
    * Modify code of an existing tache.
    * Modify code of an existing tache.
    * @param Token user token
    * @param LANG user LANG
    * @param Tache Tache object
    */
    putCodeTache(Token: string, LANG: string, Tache: Taches, extraHttpRequestParams?: any): Observable<Taches>;

    /**
    * Modify existing tache.
    * Modify existing tache.
    * @param Token user token
    * @param LANG user LANG
    * @param Tache Tache object
    * @param NotificateToTech If send notification to technician&#39;s phone.
    */
    putTache(Token: string, LANG: string, Tache: Taches, NotificateToTech?: boolean, extraHttpRequestParams?: any): Observable<Taches>;

    /**
    * Add new Tache
    * 
    * @param Token user token
    * @param LANG user LANG
    * @param Tache Tache object
    * @param NotificateToTech If send notification to technician&#39;s phone.
    */
    setTache(Token: string, LANG: string, Tache: Taches, NotificateToTech?: boolean, extraHttpRequestParams?: any): Observable<Taches>;

}
